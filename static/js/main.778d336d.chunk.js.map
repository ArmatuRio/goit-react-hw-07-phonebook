{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","items","createReducer","_","payload","state","filter","id","isLoading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","contactsReducer","devTools","process","axios","defaults","baseURL","fetchContacts","dispatch","a","get","data","addContact","name","number","contact","post","then","catch","deleteContact","contactId","delete","getContacts","getLoading","getError","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactForm","useDispatch","useState","setName","setNumber","handleChange","event","target","value","resetForm","className","styles","form","onSubmit","preventDefault","contactsOperations","form__label","type","pattern","title","required","onChange","placeholder","Filter","useSelector","contactsSelectors","filter__label","filter__input","contactsActions","ContactList","visibleContacts","useEffect","map","item","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.778d336d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__4TvGi\",\"item\":\"ContactList_item__3YsZK\",\"contact\":\"ContactList_contact__3ZIyH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__label\":\"Filter_filter__label__3r5QH\",\"filter__input\":\"Filter_filter__input__b9DYy\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const filterContact = createAction('contacts/filter');\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContact,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, { payload }) => payload,\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n  [fetchContactsRequest]: () => null,\n  [addContactRequest]: () => null,\n  [deleteContactRequest]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  isLoading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:2000';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\n\nexport const addContact = (name, number) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from '../../redux/contacts';\nimport styles from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(contactsOperations.addContact(name, number));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.form__label}>\n        Name\n        <input\n          \n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Ivan Ivanov\"\n        />\n      </label>\n      <label>\n        Number\n        <input\n         \n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n          value={number}\n          placeholder=\"111-11-11\"\n        />\n      </label>\n      <button type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions, contactsSelectors } from '../../redux/contacts';\nimport styles from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(contactsSelectors.getFilter);\n\n  return (\n    <label className={styles.filter__label}>\n      Find contacts by name\n      <input\n        className={styles.filter__input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={event =>\n          dispatch(contactsActions.filterContact(event.target.value))\n        }\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport styles from './ContactList.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(contactsSelectors.getVisibleContacts);\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <ol className={styles.ContactList}>\n      {visibleContacts.map(({ id, name, number }) => (\n        <li className={styles.item} key={id}>\n          \n            {name}: <span className={styles.contact}>{number}</span>\n         \n          <button\n           \n            type=\"button\"\n            onClick={() => dispatch(contactsOperations.deleteContact(id))}\n            \n          >Delete</button>\n        </li>\n      ))}\n    </ol>\n  );\n};\n\nexport default ContactList;\n","import ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"Wrapper\">\n    \n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n      <ToastContainer />\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}